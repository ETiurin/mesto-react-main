{"ast":null,"code":"class Auth {\n  constructor(options) {\n    this.url = options.baseUrl;\n    this.headers = options.headers;\n  }\n  _gerResponseJson(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  signUp(userEmail, userPassword) {\n    return fetch(`${this.url}/signup`, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({\n        password: userPassword,\n        email: userEmail\n      })\n    }).then(this._gerResponseJson);\n  }\n  signIn(userEmail, userPassword) {\n    return fetch(`${this.url}/signin`, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({\n        password: userPassword,\n        email: userEmail\n      })\n    }).then(this._gerResponseJson);\n  }\n  checkToken(token) {\n    return fetch(`${this.url}/users/me`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    }).then(this._gerResponseJson);\n  }\n}\nexport default new Auth({\n  baseUrl: 'https://auth.nomoreparties.co',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"names":["Auth","constructor","options","url","baseUrl","headers","_gerResponseJson","res","ok","json","Promise","reject","status","signUp","userEmail","userPassword","fetch","method","body","JSON","stringify","password","email","then","signIn","checkToken","token","Authorization"],"sources":["/Users/evgeniitiurin/dev/mesto-react/src/utils/AuthApi.js"],"sourcesContent":["class Auth {\n    constructor(options) {\n        this.url = options.baseUrl;\n        this.headers = options.headers;\n    }\n\n    _gerResponseJson(res) {\n        if (res.ok) {\n            return res.json();\n        }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    signUp(userEmail, userPassword) {\n        return fetch(`${this.url}/signup`, {\n            method: 'POST',\n            headers: this.headers,\n            body: JSON.stringify({\n                password: userPassword,\n                email: userEmail,\n            })\n        }).then(this._gerResponseJson);\n    }\n\n    signIn(userEmail, userPassword) {\n        return fetch(`${this.url}/signin`, {\n            method: 'POST',\n            headers: this.headers,\n            body: JSON.stringify({\n                password: userPassword,\n                email: userEmail,\n            })\n        }).then(this._gerResponseJson);\n    }\n\n    checkToken(token) {\n        return fetch(`${this.url}/users/me`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`,\n            },\n        }).then(this._gerResponseJson);\n    }\n}\n\nexport default new Auth({\n    baseUrl: 'https://auth.nomoreparties.co',\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n"],"mappings":"AAAA,MAAMA,IAAI,CAAC;EACPC,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACC,GAAG,GAAGD,OAAO,CAACE,OAAO;IAC1B,IAAI,CAACC,OAAO,GAAGH,OAAO,CAACG,OAAO;EAClC;EAEAC,gBAAgBA,CAACC,GAAG,EAAE;IAClB,IAAIA,GAAG,CAACC,EAAE,EAAE;MACR,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;IACrB;IAEA,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;EAClD;EAEAC,MAAMA,CAACC,SAAS,EAAEC,YAAY,EAAE;IAC5B,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACb,GAAI,SAAQ,EAAE;MAC/Bc,MAAM,EAAE,MAAM;MACdZ,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBa,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,QAAQ,EAAEN,YAAY;QACtBO,KAAK,EAAER;MACX,CAAC;IACL,CAAC,CAAC,CAACS,IAAI,CAAC,IAAI,CAACjB,gBAAgB,CAAC;EAClC;EAEAkB,MAAMA,CAACV,SAAS,EAAEC,YAAY,EAAE;IAC5B,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACb,GAAI,SAAQ,EAAE;MAC/Bc,MAAM,EAAE,MAAM;MACdZ,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBa,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,QAAQ,EAAEN,YAAY;QACtBO,KAAK,EAAER;MACX,CAAC;IACL,CAAC,CAAC,CAACS,IAAI,CAAC,IAAI,CAACjB,gBAAgB,CAAC;EAClC;EAEAmB,UAAUA,CAACC,KAAK,EAAE;IACd,OAAOV,KAAK,CAAE,GAAE,IAAI,CAACb,GAAI,WAAU,EAAE;MACjCc,MAAM,EAAE,KAAK;MACbZ,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClCsB,aAAa,EAAG,UAASD,KAAM;MACnC;IACJ,CAAC,CAAC,CAACH,IAAI,CAAC,IAAI,CAACjB,gBAAgB,CAAC;EAClC;AACJ;AAEA,eAAe,IAAIN,IAAI,CAAC;EACpBI,OAAO,EAAE,+BAA+B;EACxCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}